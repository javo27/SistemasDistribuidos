spring.datasource.url = jdbc:mysql://localhost:3306/db_cuentas?createDatabaseIfNotExist=true&verifyServerCertificate=false&useSSL=true
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.jpa.database-platform = org.hibernate.dialect.MySQL57Dialect
spring.datasource.username = root
spring.datasource.password = toor
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Valores: none, validate, update <=production , create, create-drop <= default
spring.jpa.hibernate.ddl-auto = update

# Producer properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id=group_id
topic.name.cuentas=cuentas

# Kafka Consumer properties
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
topic.name.resultado=resultado

kafka.request.topic=orden
kafka.reply.topic=resultado
kafka.group.id=group_id

# Common Kafka Properties
auto.create.topics.enable=true

server.port = 8088